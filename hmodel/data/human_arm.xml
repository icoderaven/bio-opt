<Robot name="human_arm">
  <KinBody>
    <!-- Create the base body, it should never move-->
    <!-- Note that all translations and rotations are with respect to this base-->
    <!-- For example, the robot at the identity transformation is equivalent to the identity transformation of the first body.-->
    <Body name="Base" type="dynamic">
      <Translation>0.0  0.0  0.0</Translation>
      <Geom type="cylinder">
        <rotationaxis>1 0 0 90</rotationaxis>
        <radius>0.03</radius>
        <height>0.0</height>
        <diffuseColor>0.05 0.05 0.05</diffuseColor>
      </Geom>
    </Body>

    <!-- create a dummy body for rotation out of plane -->
  <Body name="dummy" type="dynamic">
      <!-- Offset from is a fast way of specifying that the translation and rotation of this-->
      <!-- body should be relative to another link-->
      <offsetfrom>Base</offsetfrom>
      <!-- Translation relative to Base-->
      <Translation>0 0 0.005</Translation>
      <!-- <Geom type="box">
        <Translation>0.08 0 0</Translation>
        <Extents>0.01 0.01 0.001</Extents>
      </Geom> -->
    </Body>
    
     
    <!-- the first movable link-->
    <Body name="Arm0" type="dynamic">
      <!-- Offset from is a fast way of specifying that the translation and rotation of this-->
      <!-- body should be relative to another link-->
      <offsetfrom>Base</offsetfrom>
      <!-- Translation relative to Base-->
      <Translation>0 0 0.005</Translation>
      <Geom type="box">
        <Translation>0.08 0 0</Translation>
        <Extents>0.08 0.01 0.005</Extents>
      </Geom>
    </Body>
    
    <!-- Another joint for out of plane movement -->
    <Joint name="dummy_joint" type="hinge">
      <Body>Base</Body>
      <Body>dummy</Body>
      <offsetfrom>Arm0</offsetfrom>
      <weight>4</weight>
      <limitsdeg>-90 0</limitsdeg>
      <axis>0 1 0</axis>
      <maxvel>3</maxvel>
      <resolution>1</resolution>
    </Joint>
    
    <!-- declare a circular hinge joint (circular joints have no limits) -->
    <Joint name="Arm0_joint" type="hinge">
      <Body>dummy</Body>
      <Body>Arm0</Body>
      <offsetfrom>Arm0</offsetfrom>
      <weight>4</weight>
      <limitsdeg>-100 100</limitsdeg>
      <axis>0 0 1</axis>
      <maxvel>3</maxvel>
      <resolution>1</resolution>
    </Joint>

    <!-- the second movable link-->
    <Body name="Arm1" type="dynamic">
      <offsetfrom>Arm0</offsetfrom>
      <Translation>0.14 0 0.01</Translation>
      <Geom type="box">
        <Translation>0.08 0.0 0</Translation>
        <Extents>0.08 0.0075 0.005</Extents>
      </Geom>
    </Body>
    
    <!-- declare a circular hinge joint (circular joints have no limits) -->
    <Joint name="Arm1-joint" type="hinge">
      <Body>Arm0</Body>
      <Body>Arm1</Body>
      <offsetfrom>Arm1</offsetfrom>
      <weight>3</weight>
      <limitsdeg>0 150</limitsdeg>
      <axis>0 0 1</axis>
      <maxvel>4</maxvel>
      <resolution>1</resolution>
    </Joint>
    
    </KinBody>
    
    <!-- Specifying the manipulator structure-->
  <Manipulator name="hand">
    <effector>Arm1</effector>   <!-- last link where end effector is attached-->
    <base>Base</base>           <!-- base link-->
        <!-- the id of the inverse kinematics solver, it is not necessary to-->
    <!-- specify an ik solver for every robot. But if there is one,-->
    <!-- use iksolver field to identity it.-->
   <!-- <iksolver>/home/icoderaven/.openrave/kinematics.1a082ff5b0dc1933b4939c00e7a7dd4f/ikfast61.Translation3D.x86_64.0_1_2.so</iksolver> -->
    <!-- joint values of the closed and opened positions-->

    <!-- grasp goal with respect to the effector-->
    <Translation>0.2 0 0</Translation>
  </Manipulator>
</Robot>
